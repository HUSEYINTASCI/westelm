{"version":3,"sources":["Product.js","Detail.js","App.js","serviceWorker.js","index.js"],"names":["Product","this","props","imageUrl","description","regprice","selprice","onClick","className","src","alt","dangerouslySetInnerHTML","__html","Component","detail","close","rightclick","leftclick","id","App","handleProductClick","productId","detailImageData","data","groups","find","product","setState","imageSet","images","maxImageIndex","length","detailImageUrl","href","detailBubbleContainer","document","getElementById","forEach","image","bubbleDiv","createElement","appendChild","getElementsByClassName","style","display","incrementImage","e","bubbleList","state","currenImageIndex","imageIndex","newImageIndex","bubble","index","classList","add","remove","decrementImage","showdetail","firstChild","removeChild","productData","products","map","productName","name","productregprice","priceRange","regular","low","high","productselprice","selling","productImageUrl","hero","key","window","onclick","target","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.725b7275.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style/Product.scss\";\r\nclass Product extends Component {\r\n  render() {\r\n    const { imageUrl, description, regprice, selprice, onClick } = this.props;\r\n    return (\r\n      <div className=\"product-container\" onClick={onClick}>\r\n        <img className=\"hero-image\" src={imageUrl} alt={description} />\r\n        <div\r\n          className=\"description-container\"\r\n          dangerouslySetInnerHTML={{ __html: description }}\r\n        />\r\n        <div className=\"price-container\">\r\n          <div className=\"price-regular\">{regprice}</div>\r\n          <div className=\"price-selling\">{selprice}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport \"./style/Detail.scss\";\r\nimport { IoIosArrowDropright } from \"react-icons/io\";\r\nimport { IoIosArrowDropleft } from \"react-icons/io\";\r\nimport { MdClose } from \"react-icons/md\";\r\nclass detail extends Component {\r\n  render() {\r\n    const { imageUrl, close, rightclick, leftclick } = this.props;\r\n    return (\r\n      <div className=\"detail\">\r\n        <div className=\"detail-content\">\r\n          <MdClose className=\"close\" onClick={close} />\r\n          <IoIosArrowDropright className=\"nav-right\" onClick={rightclick} />\r\n          <IoIosArrowDropleft className=\"nav-left\" onClick={leftclick} />\r\n          <img\r\n            src={imageUrl}\r\n            className=\"detail-image\"\r\n            alt=\"detail-placeholder\"\r\n          />\r\n          <div id=\"bubble-stepper\" className=\"bubble-stepper\">\r\n            <div id=\"bubble-container\" className=\"bubble-container\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default detail;\r\n","import React, { Component } from \"react\";\nimport \"./style/App.scss\";\nimport data from \"./data/data.json\";\nimport Product from \"./Product\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageSet: [],\n      imageIndex: 0,\n      maxImageIndex: 0,\n      detailImageUrl: \"\"\n    };\n  }\n\n  // Using the picture id from the click event\n  handleProductClick = productId => {\n    const detailImageData = data.groups.find(product => {\n      return product.id === productId;\n    });\n\n    // Populate local state to have the relevant image data\n    this.setState({\n      imageSet: detailImageData.images,\n      maxImageIndex: detailImageData.images.length,\n      detailImageUrl: detailImageData.images[0].href\n    });\n\n    const detailBubbleContainer = document.getElementById(\"bubble-container\");\n\n    // Create a div for each image in the set to bubble stepper\n    detailImageData.images.forEach(image => {\n      const bubbleDiv = document.createElement(\"div\");\n      bubbleDiv.className = \"bubble\";\n      detailBubbleContainer.appendChild(bubbleDiv);\n    });\n\n    const bubbleList = document.getElementsByClassName(\"bubble\");\n    bubbleList[0].className += \" current-bubble\";\n\n    // Showing to detail\n    const detail = document.getElementsByClassName(\"detail\")[0];\n    detail.style.display = \"block\";\n  };\n\n  // Map over the product data to populate our product component\n  componentDidMount() {\n    const productData = data.groups;\n\n    const products = productData.map(product => {\n      const productName = product.name;\n      const productregprice = `Regular: $${product.priceRange.regular.low} - $${product.priceRange.regular.high}`;\n      const productselprice = `Selling: $${product.priceRange.selling.low} - $${product.priceRange.selling.high}`;\n      const productId = product.id;\n      const productImageUrl = product.hero.href;\n      return (\n        <Product\n          key={productId}\n          imageUrl={productImageUrl}\n          description={productName}\n          regprice={productregprice}\n          selprice={productselprice}\n          onClick={() => this.handleProductClick(productId, productData)}\n        />\n      );\n    });\n\n    // Save the populated products in local state\n    this.setState({ products: products });\n\n    const detail = document.getElementsByClassName(\"detail\")[0];\n    window.onclick = e => {\n      if (e.target === detail) {\n        detail.style.display = \"none\";\n        this.setState({ imageSet: [], imageIndex: 0, maxImageIndex: 0 });\n\n        const detailBubbleContainer = document.getElementById(\n          \"bubble-container\"\n        );\n        while (detailBubbleContainer.firstChild) {\n          detailBubbleContainer.removeChild(detailBubbleContainer.firstChild);\n        }\n      }\n    };\n  }\n\n  // select the next one in the array of modal images, and add a background\n  incrementImage = e => {\n    const bubbleList = [...document.getElementsByClassName(\"bubble\")];\n    const maxImageIndex = this.state.maxImageIndex;\n    const currenImageIndex = this.state.imageIndex;\n    if (maxImageIndex > currenImageIndex + 1) {\n      const newImageIndex = this.state.imageIndex + 1;\n      this.setState({\n        detailImageUrl: this.state.imageSet[newImageIndex].href,\n        imageIndex: newImageIndex\n      });\n\n      // Remove bubbles from the detail\n      bubbleList.forEach((bubble, index) => {\n        if (index === currenImageIndex + 1) {\n          bubble.classList.add(\"current-bubble\");\n        } else {\n          bubble.classList.remove(\"current-bubble\");\n        }\n      });\n    }\n  };\n\n  decrementImage = e => {\n    const bubbleList = [...document.getElementsByClassName(\"bubble\")];\n    const currenImageIndex = this.state.imageIndex;\n    if (currenImageIndex > 0) {\n      const newImageIndex = this.state.imageIndex - 1;\n      this.setState({\n        detailImageUrl: this.state.imageSet[newImageIndex].href,\n        imageIndex: newImageIndex\n      });\n\n      // Remove bubbles from the detail\n      bubbleList.forEach((bubble, index) => {\n        if (index === currenImageIndex - 1) {\n          bubble.classList.add(\"current-bubble\");\n        } else {\n          bubble.classList.remove(\"current-bubble\");\n        }\n      });\n    }\n  };\n\n  // Clear out the details image state\n  close = () => {\n    this.setState({\n      imageSet: [],\n      imageIndex: 0,\n      maxImageIndex: 0,\n      showdetail: false\n    });\n\n    // Remove the bubbles from the stepper\n    const detailBubbleContainer = document.getElementById(\"bubble-container\");\n    while (detailBubbleContainer.firstChild) {\n      detailBubbleContainer.removeChild(detailBubbleContainer.firstChild);\n    }\n\n    // Hide the Details\n    const detail = document.getElementsByClassName(\"detail\")[0];\n    detail.style.display = \"none\";\n  };\n\n  render() {\n    return (\n      <div>\n        <canvas></canvas>\n        <Detail\n          className=\"detail\"\n          imageUrl={this.state.detailImageUrl}\n          close={this.close}\n          rightclick={this.incrementImage}\n          leftclick={this.decrementImage}\n        />\n        <div className=\"container\">{this.state.products}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/App.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//Render The App\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}